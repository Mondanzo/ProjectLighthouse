@using System.Web
@using LBPUnion.ProjectLighthouse
@using LBPUnion.ProjectLighthouse.Configuration
@using LBPUnion.ProjectLighthouse.PlayerData
@using LBPUnion.ProjectLighthouse.PlayerData.Profiles
@using Microsoft.EntityFrameworkCore
@model LBPUnion.ProjectLighthouse.Levels.Slot

@{
    User? user = (User?)ViewData["User"];

    await using Database database = new();

    string slotName = HttpUtility.HtmlDecode(string.IsNullOrEmpty(Model!.Name) ? "Unnamed Level" : Model.Name);

    bool isMobile = (bool?)ViewData["IsMobile"] ?? false;
    bool mini = (bool?)ViewData["IsMini"] ?? false;

    bool isQueued = false;
    bool isHearted = false;

    if (user != null)
    {
        isQueued = await database.QueuedLevels.FirstOrDefaultAsync(h => h.SlotId == Model.SlotId && h.UserId == user.UserId) != null;
        isHearted = await database.HeartedLevels.FirstOrDefaultAsync(h => h.SlotId == Model.SlotId && h.UserId == user.UserId) != null;
    }

    string callbackUrl = (string)ViewData["CallbackUrl"]!;
    bool showLink = (bool?)ViewData["ShowLink"] ?? false;

    string iconHash = Model.IconHash;
    if (string.IsNullOrWhiteSpace(iconHash) || iconHash.StartsWith('g')) iconHash = ServerConfiguration.Instance.WebsiteConfiguration.MissingIconHash;
}
<div class="card">
    @{
        int size = isMobile || mini ? 50 : 100;
    }
    <div class="cardIcon slotCardIcon">
        <img alt=" " class="cardIconInner slotCardIconInner" src="/gameAssets/@iconHash" 
             onerror="this.onerror='';this.src='/gameAssets/@ServerConfiguration.Instance.WebsiteConfiguration.MissingIconHash'">
    </div>
    <div class="cardStats">
        @if (!mini)
        {
            @if (showLink)
            {
                <h2>
                    <a href="~/slot/@Model.SlotId">@slotName</a>
                </h2>
            }
            else
            {
                <h1>
                    @slotName
                </h1>
            }
        }
        else
        {
            @if (showLink)
            {
                <h3>
                    <a href="~/slot/@Model.SlotId">@slotName</a>
                </h3>
            }
            else
            {
                <h3>
                    @slotName
                </h3>
            }
        }

        <div class="cardStatsUnderTitle">
            <i class="pink bx bxs-heart" title="Hearts"></i> <span>@Model.Hearts</span>
            <i class="orange bx bx-play-circle" title="Plays"></i> <span>@Model.PlaysUnique</span>
            <i class="green bx bxs-upvote" title="Yays"></i> <span>@Model.Thumbsup</span>
            <i class="pink bx bxs-downvote" title="Boos"></i> <span>@Model.Thumbsdown</span>

            @if (Model.GameVersion == GameVersion.LittleBigPlanet1)
            {
                <i class="bx bxs-star orange" title="LBP1 Stars"></i>
                <span>@(Math.Round(Model.RatingLBP1 * 10) / 10)</span>
            }
        </div>
        <p>
            <i>Created by <a href="/user/@Model.Creator?.UserId">@Model.Creator?.Username</a> for @Model.GameVersion.ToPrettyString()</i>
        </p>
    </div>
    <div class="cardButtons">
        @if (user != null && !mini)
        {
            if (isHearted)
            {
                <a href="/slot/@Model.SlotId/unheart?callbackUrl=@callbackUrl" title="Unheart">
                    <i class="bx bx-md bxs-heart" style="margin: 0"></i>
                </a>
            }
            else
            {
                <a href="/slot/@Model.SlotId/heart?callbackUrl=@callbackUrl" title="Heart">
                    <i class="pink bx-md bx bxs-heart" style="margin: 0"></i>
                </a>
            }

            if (isQueued)
            {
                <a href="/slot/@Model.SlotId/unqueue?callbackUrl=@callbackUrl" title="Unqueue">
                    <i class="bx bx-md bxs-bell orange" style="margin: 0"></i>
                </a>
            }
            else
            {
                <a href="/slot/@Model.SlotId/queue?callbackUrl=@callbackUrl" title="Queue">
                    <i class="bx bx-md bxs-bell" style="margin: 0"></i>
                </a>
            }
        }
    </div>
</div>