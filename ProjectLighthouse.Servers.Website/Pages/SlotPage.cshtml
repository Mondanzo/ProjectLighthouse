@page "/slot/{id:int}"
@using System.Web
@using LBPUnion.ProjectLighthouse.Administration
@using LBPUnion.ProjectLighthouse.Configuration
@using LBPUnion.ProjectLighthouse.Extensions
@using LBPUnion.ProjectLighthouse.PlayerData.Reviews
@model LBPUnion.ProjectLighthouse.Servers.Website.Pages.SlotPage

@{
    Layout = "Layouts/BaseLayout";
    Model.ShowTitleInPage = false;

    Model.Title = HttpUtility.HtmlDecode(Model.Slot?.Name ?? "");
    Model.Description = HttpUtility.HtmlDecode(Model.Slot?.Description ?? "");
}

<div>
<div class="slot-grid">
    @await Html.PartialAsync("Partials/SlotCardPartial", Model.Slot, new ViewDataDictionary(ViewData)
    {
    {
        "User", Model.User
    },
    {
        "CallbackUrl", $"~/slot/{Model.Slot?.SlotId}"
    },
    {
        "ShowLink", false
    }
    })
    <div>
    <div class="container box-container box-background" id="description">
        <div class="divider-dashed no-margin"></div>
        <div class="description box-margin">
            <h2>Description</h2>
            <p style="overflow-wrap: anywhere">@HttpUtility.HtmlDecode(string.IsNullOrEmpty(Model.Slot?.Description) ? "This level has no description." : Model.Slot.Description)</p>
        </div>
        <div class="divider-dashed no-margin"></div>
    </div>
    <div class="container box-container" id="tags">
        @{
            string[] authorLabels = Model.Slot?.AuthorLabels.Split(",") ?? new string[] { };
            if (authorLabels.Length == 1) // ..?? ok c#
            {
        <p>This level has no tags.</p>
            }
            else
            {
                foreach (string label in authorLabels.Where(label => !string.IsNullOrEmpty(label)))
                {
            <div class="tag">@label.Replace("LABEL_", "")</div>
                }
            }
        }
    </div>
    </div>
    </div>
    <div class="eight wide column">
        @await Html.PartialAsync("Partials/CommentsPartial")
    </div>
    <div>
        <div class="divider-solid"></div>
        <h2>Reviews</h2>
        @if (Model.Reviews.Count == 0 && Model.ReviewsEnabled)
        {
            <p>There are no reviews.</p>
        }
        else if (!Model.ReviewsEnabled)
        {
            <b>
                <i>Reviews are disabled on this level.</i>
            </b>
        }
        else
        {
            int count = Model.Reviews.Count;
            <p>There @(count == 1 ? "is" : "are") @count review@(count == 1 ? "" : "s").</p>
            <div class="ui divider"></div>
        }


        @for(int i = 0; i < Model.Reviews.Count; i++)
        {
            Review review = Model.Reviews[i];
            string faceHash = (review.Thumb switch {
                -1 => review.Reviewer?.BooHash,
                0 => review.Reviewer?.MehHash,
                1 => review.Reviewer?.YayHash,
                
                _ => throw new ArgumentOutOfRangeException(),
                }) ?? "";

            if (string.IsNullOrWhiteSpace(faceHash))
            {
                faceHash = ServerConfiguration.Instance.WebsiteConfiguration.MissingIconHash;
            }

            string faceAlt = review.Thumb switch {
                -1 => "Boo!",
                0 => "Meh.",
                1 => "Yay!",
                
                _ => throw new ArgumentOutOfRangeException(),
                };

            <div class="card">
                <div>
                    <img class="cardIcon slotCardIcon" src="@ServerConfiguration.Instance.ExternalUrl/gameAssets/@faceHash" alt="@faceAlt" title="@faceAlt">
                </div>
                <div class="cardStats">
                    <h3 style="margin-bottom: 5px;">@review.Reviewer?.Username</h3>
                    @if (review.Deleted)
                    {
                        if (review.DeletedBy == DeletedBy.LevelAuthor)
                        {
                            <p>
                                <i>This review has been deleted by the level author.</i>
                            </p>
                        }
                        else
                        {
                            <p>
                                <i>This review has been deleted by a moderator.</i>
                            </p>
                        }
                    }
                    else
                    {
                        @if (review.Labels.Length > 1)
                        {
                            @foreach (string reviewLabel in review.Labels)
                            {
                                <div class="ui blue label">@reviewLabel.Replace("LABEL_", "")</div>
                            }
                        }
                        @if (string.IsNullOrWhiteSpace(review.Text))
                        {
                            <p>
                                <i>This review contains no text.</i>
                            </p>
                        }
                        else
                        {
                            {
                                <p>@HttpUtility.HtmlDecode(review.Text)</p>
                            }
                        }
                    }
                </div>
            </div>
            @if (i != Model.Reviews.Count - 1)
            {
                <div class="divider-dashed"></div>
            }
        }
    </div>
</div>

@if (Model.User != null && Model.User.IsAdmin)
{
    <div>
        <div class="divider-solid"></div>
        <h2>Admin Options</h2>

        @if (Model.Slot?.TeamPick ?? false)
        {
            <a href="/admin/slot/@Model.Slot.SlotId/removeTeamPick">
                <div class="button">
                    <i class="ribbon icon"></i>
                    <span class="pink">Remove Team Pick</span>
                </div>
            </a>
        }
        else
        {
            <a href="/admin/slot/@Model.Slot?.SlotId/teamPick">
                <div class="bg-pink button">
                    <img src="~/assets/images/teamPicks.svg" class="team-picks-icon">
                    <span>Team Pick</span>
                </div>
            </a>
        }

        <a href="/admin/slot/@Model.Slot?.SlotId/delete">
            <div class="button bg-orange">
                <i class="bx bx-trash"></i>
                <span>Delete</span>
            </div>
        </a>
    </div>
}